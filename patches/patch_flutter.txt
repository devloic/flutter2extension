@@ -175,16 +175,18 @@
 tter) %7B%0A
+  
   var _f
@@ -198,18 +198,22 @@
 r = %7B%7D;%0A
-%7D%0A
+  %7D%0A  
 _flutter
@@ -228,17 +228,21 @@
 = null;%0A
-%0A
+  %0A  
 (functio
@@ -250,16 +250,18 @@
  () %7B%0A  
+  
 %22use str
@@ -270,63 +270,51 @@
 t%22;%0A
+  
 %0A  
-const baseUri = ensureTrailingSlash(getBaseURI());%0A%0A
+  //lolopatch%0A    let baseUri = %22%22;%0A  
   fu
@@ -331,20 +331,29 @@
 BaseURI(
+appname
 ) %7B%0A
+  
     cons
@@ -358,16 +358,19 @@
 nst base
+str
  = docum
@@ -396,154 +396,48 @@
 base
+2
 %22)
-;%0A    return (base && base.getAttribute(%22href%22)) %7C%7C %22%22;%0A  %7D%0A%0A  function ensureTrailingSlash(uri) %7B%0A    if (uri == %22%22) %7B%0A      return uri
+.getAttribute(%22href%22)+appname+%22/%22
 ;%0A  
-  %7D%0A
     
@@ -447,1929 +447,113 @@
 urn 
-uri.endsWith(%22/%22) ? uri : %60$%7Buri%7D/%60;%0A  %7D%0A%0A  /**%0A   * Wraps %60promise%60 in a timeout of the given %60duration%60 in ms.%0A   *%0A   * Resolves/rejects with whatever the original %60promises%60 does, or rejects%0A   * if %60promise%60 takes longer to complete than %60duration%60. In that case,%0A   * %60debugName%60 is used to compose a legible error message.%0A   *%0A   * If %60duration%60 is %3C 0, the original %60promise%60 is returned unchanged.%0A   * @param %7BPromise%7D promise%0A   * @param %7Bnumber%7D duration%0A   * @param %7Bstring%7D debugName%0A   * @returns %7BPromise%7D a wrapped promise.%0A   */%0A  async function timeout(promise, duration, debugName) %7B%0A    if (duration %3C 0) %7B%0A      return promise;%0A    %7D%0A    let timeoutId;%0A    const _clock = new Promise((_, reject) =%3E %7B%0A      timeoutId = setTimeout(() =%3E %7B%0A        reject(%0A          new Error(%0A            %60$%7BdebugName%7D took more than $%7Bduration%7Dms to resolve. Moving on.%60,%0A            %7B%0A              cause: timeout,%0A            %7D%0A          )%0A        );%0A      %7D, duration);%0A    %7D);%0A%0A    return Promise.race(%5Bpromise, _clock%5D).finally(() =%3E %7B%0A      clearTimeout(timeoutId);%0A    %7D);%0A  %7D%0A%0A  /**%0A   * Handles the creation of a TrustedTypes %60policy%60 that validates URLs based%0A   * on an (optional) incoming array of RegExes.%0A   */%0A  class FlutterTrustedTypesPolicy %7B%0A    /**%0A     * Constructs the policy.%0A     * @param %7B%5BRegExp%5D%7D validPatterns the patterns to test URLs%0A     * @param %7BString%7D policyName the policy name (optional)%0A     */%0A    constructor(validPatterns, policyName = %22flutter-js%22) %7B%0A      const patterns = validPatterns %7C%7C %5B%0A        /%5C.js$/,%0A      %5D;%0A      if (window.trustedTypes) %7B%0A        this.policy = trustedTypes.createPolicy(policyName, %7B%0A          createScriptURL: function(url) %7B%0A            const parsed = new URL(url, window.location);%0A            const file = parsed.pathname.split(%22/%22).pop();%0A            const matches = patterns.some((pattern) =%3E pattern.test(file));%0A            if (matches
+(basestr) %7C%7C %22%22; %0A    //ENDlolopatch%0A    %7D%0A  %0A    function ensureTrailingSlash(uri) %7B%0A      if (uri == %22%22
 ) %7B%0A
@@ -564,673 +564,86 @@
     
-      
 return 
-parsed.toString()
+uri
 ;%0A      
-      %7D%0A            console.error(%0A              %22URL rejected by TrustedTypes policy%22,%0A              policyName, %22:%22, url, %22(download prevented)%22);%0A          %7D%0A        %7D);%0A      %7D%0A    %7D%0A  %7D%0A%0A  /**%0A   * Handles loading/reloading Flutter's service worker, if configured.%0A   *%0A   * @see: https://developers.google.com/web/fundamentals/primers/service-workers%0A   */%0A  class FlutterServiceWorkerLoader %7B%0A    /**%0A     * Injects a TrustedTypesPolicy (or undefined if the feature is not supported).%0A     * @param %7BTrustedTypesPolicy %7C undefined%7D policy%0A     */%0A    setTrustedTypesPolicy(policy) %7B%0A      this._ttPolicy = policy
+%7D%0A      return uri.endsWith(%22/%22) ? uri : %60$%7Buri%7D/%60
 ;%0A    %7D%0A
+  
 %0A   
@@ -658,558 +658,609 @@
   * 
-Returns a Promise that resolves when the latest Flutter service worker,%0A     * configured by %60settings%60 has been loaded and activated.%0A     *%0A     * Otherwise, the 
+Wraps %60promise%60 in a timeout of the given %60duration%60 in ms.%0A     *%0A     * Resolves/rejects with whatever the original %60promises%60 does, or rejects%0A     * if %60promise%60 takes longer to complete than %60duration%60. In that case,%0A     * %60debugName%60 is used to compose a legible error message.%0A     *%0A     * If %60duration%60 is %3C 0, the original %60
 promise
+%60
  is re
-jected with an error message.%0A     * @param %7B*%7D settings Service worker settings%0A     * @returns %7BPromise%7D that resolves when the latest serviceWorker is ready.%0A     */%0A    loadServiceWorker(settings) %7B%0A      if (settings == null) %7B%0A        // In the future, settings = null -%3E uninstall service worker?%0A        console.debug(%22Null serviceWorker configuration. Skipping.%22);
+turned unchanged.%0A     * @param %7BPromise%7D promise%0A     * @param %7Bnumber%7D duration%0A     * @param %7Bstring%7D debugName%0A     * @returns %7BPromise%7D a wrapped promise.%0A     */%0A    async function timeout(promise, duration, debugName) %7B%0A      if (duration %3C 0) %7B
 %0A   
@@ -1271,33 +1271,23 @@
  return 
-P
+p
 romise
-.resolve()
 ;%0A      
@@ -1298,366 +1298,132 @@
     
-if (!(%22serviceWorker%22 in navigator)) %7B%0A        let errorMessage = %22Service Worker API unavailable.%22;%0A        if (!window.isSecureContext) %7B%0A          errorMessage += %22%5CnThe current context is NOT secure.%22%0A          errorMessage += %22%5CnRead more: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts%22;%0A    
+let timeoutId;%0A      const _clock = new Promise((_, reject) =%3E %7B%0A        timeoutId = setTimeout(() =%3E %7B%0A
     
-%7D%0A
       
-  return Promise.
 reject(%0A
+  
     
@@ -1442,21 +1442,8 @@
 ror(
-errorMessage)
 %0A   
@@ -1451,152 +1451,79 @@
     
-);%0A
       
-%7D%0A      const %7B%0A        serviceWorkerVersion,%0A        serviceWorkerUrl = %60$%7BbaseUri%7Dflutter_service_worker.js?v=$%7BserviceWorkerVersion%7D
+%60$%7BdebugName%7D took more than $%7Bduration%7Dms to resolve. Moving on.
 %60,%0A 
@@ -1533,558 +1533,227 @@
     
-timeoutMillis = 4000,%0A      %7D = settings;%0A%0A      // Apply the TrustedTypes policy, if present.%0A      let url = serviceWorkerUrl;%0A      if (this._ttPolicy != null) %7B%0A        url = this._ttPolicy.createScriptURL(url);%0A
+      %7B%0A                cause: timeout,%0A        
       %7D%0A
-%0A
       
-const serviceWorkerActivation = navigator.serviceWorker%0A        .register(url)%0A        .then(this._getNewServiceWorker)%0A        .then(this._waitForServiceWorkerActiv
+      )%0A          );%0A        %7D, dur
 ation);%0A
-%0A
       
-// Timeout race promise%0A      return timeout(%0A        serviceWorkerActivation,%0A        timeoutMillis,%0A        %22prepareServiceWorker%22
+%7D);%0A  %0A      return Promise.race(%5Bpromise, _clock%5D).finally(() =%3E %7B%0A        clearTimeout(timeoutId);
 %0A      
+%7D
 );%0A 
@@ -1749,32 +1749,34 @@
       %7D);%0A    %7D%0A
+  
 %0A    /**%0A     * 
@@ -1779,429 +1779,419 @@
   * 
-Returns the latest service worker for the given %60serviceWorkerRegistrationPromise%60
+Handles the creation of a TrustedTypes %60policy%60 that validates URLs based%0A     * on an (optional) incoming array of RegExes
 .%0A     *
+/
 %0A    
- * This might return the current service worker, if there's no new service worker%0A     * awaiting to be installed/updated.%0A     *%0A     * @param %7BPromise%3CServiceWorkerRegistration%3E%7D serviceWorkerRegistrationPromise%0A     * @returns %7BPromise%3CServiceWorker%3E%7D%0A     */%0A    async _getNewServiceWorker(serviceWorkerRegistrationPromise
+class FlutterTrustedTypesPolicy %7B%0A      /**%0A       * Constructs the policy.%0A       * @param %7B%5BRegExp%5D%7D validPatterns the patterns to test URLs%0A       * @param %7BString%7D policyName the policy name (optional)%0A       */%0A      constructor(validPatterns, policyName = %22flutter-js%22
 ) %7B%0A
@@ -2200,862 +2200,690 @@
     
+  
 const 
-reg = await serviceWorkerRegistrationPromise;%0A%0A      if (!reg.active && (reg.installing %7C%7C reg.waiting)) %7B%0A        // No active web worker and we have installed or are installing%0A        // one for the first time. Simply wait for it to activate.%0A        console.debug(%22Installing/Activating first service worker.%22);%0A        return reg.installing %7C%7C reg.waiting;%0A      %7D else if (!reg.active.scriptURL.endsWith(serviceWorkerVersion)) %7B%0A        // When the app updates the serviceWorkerVersion changes, so we%0A        // need to ask the service worker to update.%0A        return reg.update().then((newReg) =%3E %7B%0A          console.debug(%22Updating service worker.%22);%0A          return newReg.installing %7C%7C newReg.waiting %7C%7C newReg.active;%0A        %7D);%0A      %7D else %7B%0A        console.debug(%22Loading from existing service worker.%22);%0A        return reg.active;
+patterns = validPatterns %7C%7C %5B%0A          /%5C.js$/,%0A        %5D;%0A        if (window.trustedTypes) %7B%0A          this.policy = trustedTypes.createPolicy(policyName, %7B%0A            createScriptURL: function(url) %7B%0A              const parsed = new URL(url, window.location);%0A              const file = parsed.pathname.split(%22/%22).pop();%0A              const matches = patterns.some((pattern) =%3E pattern.test(file));%0A              if (matches) %7B%0A                return parsed.toString();%0A              %7D%0A              console.error(%0A                %22URL rejected by TrustedTypes policy%22,%0A                policyName, %22:%22, url, %22(download prevented)%22);%0A            %7D%0A          %7D);%0A        %7D
 %0A   
@@ -2885,32 +2885,34 @@
 %7D%0A      %7D%0A    %7D%0A
+  
 %0A    /**%0A     * 
@@ -2906,24 +2906,492 @@
   /**%0A     *
+ Handles loading/reloading Flutter's service worker, if configured.%0A     *%0A     * @see: https://developers.google.com/web/fundamentals/primers/service-workers%0A     */%0A    class FlutterServiceWorkerLoader %7B%0A      /**%0A       * Injects a TrustedTypesPolicy (or undefined if the feature is not supported).%0A       * @param %7BTrustedTypesPolicy %7C undefined%7D policy%0A       */%0A      setTrustedTypesPolicy(policy) %7B%0A        this._ttPolicy = policy;%0A      %7D%0A  %0A      /**%0A       *
  Returns a P
@@ -3424,59 +3424,93 @@
 the 
-%60
 latest
-S
+ Flutter s
 ervice
-W
+ w
 orker
-%60 changes its%0A     * state to %22
+,%0A       * configured by %60settings%60 has been loaded and 
 acti
@@ -3518,84 +3518,141 @@
 ated
-%22
 .%0A     
+  
 *%0A     
+  
 * 
-@param %7BPromise%3CServiceWorker%3E%7D latest
+Otherwise, the promise is rejected with an error message.%0A       * @param %7B*%7D settings 
 Service
-W
+ w
 orker
-Promise%0A
+ settings%0A  
     
@@ -3675,159 +3675,335 @@
 mise
-%3Cvoid%3E%7D%0A     */%0A    async _waitForServiceWorkerActivation(latestS
+%7D that resolves when the latest serviceWorker is ready.%0A       */%0A      loadServiceWorker(settings) %7B%0A        if (settings == null) %7B%0A          // In the future, settings = null -%3E uninstall s
 ervice
-W
+ w
 orker
-Promise) %7B%0A      const serviceWorker = await latestServiceWorkerPromise;%0A%0A
+?%0A          console.debug(%22Null serviceWorker configuration. Skipping.%22);%0A          return Promise.resolve();%0A        %7D%0A  
     
@@ -4001,32 +4001,34 @@
  %7D%0A        if (!
+(%22
 serviceWorker %7C%7C
@@ -4028,299 +4028,794 @@
 rker
- %7C%7C s
+%22 in navigator)) %7B%0A          let errorMessage = %22S
 ervice
+ 
 Worker
-.state == %22activated%22) %7B%0A        if (!serviceWorker) %7B%0A          return Promise.reject(%0A            new Error(%22Cannot activate a null 
+ API unavailable.%22;%0A          if (!window.isSecureContext) %7B%0A            errorMessage += %22%5CnThe current context is NOT secure.%22%0A            errorMessage += %22%5CnRead more: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts%22;%0A          %7D%0A          return Promise.reject(%0A            new Error(errorMessage)%0A          );%0A        %7D%0A        const %7B%0A          serviceWorkerVersion,%0A          serviceWorkerUrl = %60$%7BbaseUri%7Dflutter_
 service
- 
+_
 worker
-!%22)%0A          );%0A        %7D else %7B%0A          console.debug(%22S
+.js?v=$%7BserviceWorkerVersion%7D%60,%0A          timeoutMillis = 4000,%0A        %7D = settings;%0A  %0A        // Apply the TrustedTypes policy, if present.%0A        let url = s
 ervice
- w
+W
 orker
- already active.%22);%0A          return Promise.resolve(
+Url;%0A        if (this._ttPolicy != null) %7B%0A          url = this._ttPolicy.createScriptURL(url
 );%0A 
@@ -4829,265 +4829,347 @@
 %7D%0A  
+%0A
     
-%7D%0A
     
-  return new Promise((resolve, _) =%3E %7B%0A        serviceWorker.addEventListener(%22statechange%22, () =%3E %7B%0A          if (serviceWorker.state == %22activated%22) %7B
+const serviceWorkerActivation = navigator.serviceWorker%0A          .register(url)%0A          .then(this._getNewServiceWorker)%0A          .then(this._waitForServiceWorkerActivation);
 %0A  
+%0A
         
-  console.debug(%22Activated new
+// Timeout race promise%0A        return timeout(%0A         
  service
- w
+W
 orker
-.%22);%0A            resolve();%0A          %7D
+Activation,%0A          timeoutMillis,%0A          %22prepareServiceWorker%22
 %0A   
@@ -5165,33 +5165,32 @@
 Worker%22%0A        
-%7D
 );%0A      %7D);%0A   
@@ -5187,394 +5187,593 @@
    %7D
-);
 %0A  
+%0A
   
-%7D%0A  %7D%0A%0A
+  
   /**%0A
+    
    * 
-Handles injecting the main Flutter web entrypoint (main.dart.js), and notifying%0A   * the user when Flutter is ready, through %60didCreateEngineInitializer%60.%0A   *%0A   * @see https://docs.flutter.dev/development/platform-integration/web/initialization%0A
+Returns the latest service worker for the given %60serviceWorkerRegistrationPromise%60.%0A       *%0A       * This might return the current service worker, if there's no new service worker%0A       * awaiting to be installed/updated.%0A       *%0A       * @param %7BPromise%3CServiceWorkerRegistration%3E%7D serviceWorkerRegistrationPromise%0A       * @returns %7BPromise%3CServiceWorker%3E%7D%0A  
    
+  
 */%0A  
-class FlutterEntrypointLoader %7B%0A    /**%0A     * Creates a FlutterEntrypointLoader.
+    async _getNewServiceWorker(serviceWorkerRegistrationPromise) %7B%0A        const reg = await serviceWorkerRegistrationPromise;
 %0A  
+%0A
    
-*/%0A
+ 
     
-constructor(
+if (!reg.active && (reg.installing %7C%7C reg.waiting)
 ) %7B%0A
@@ -5782,549 +5782,929 @@
     
+    
 // 
-Watchdog to prevent injecting the main entrypoint multiple times.%0A      this._scriptLoaded = false
+No active web worker and we have installed or are installing%0A          // one for the first time. Simply wait for it to activate.%0A          console.debug(%22Installing/Activating first service worker.%22)
 ;%0A    
-%7D%0A%0A
     
-/**%0A     * Injects a TrustedTypesPolicy (or undefined if the feature is not supported).%0A     * @param %7BTrustedTypesPolicy %7C undefined%7D policy%0A
+  return reg.installing %7C%7C reg.waiting;%0A        %7D else if (!reg.active.scriptURL.endsWith(serviceWorkerVersion)) %7B%0A          // When the app updates the serviceWorkerVersion changes, so we%0A          // need to ask the service worker to update.%0A 
      
-*/%0A
     
-setTrustedTypesPolicy(policy) %7B%0A      this._ttPolicy = policy;%0A    %7D%0A
+return reg.update().then((newReg) =%3E %7B%0A            console.debug(%22Updating service worker.%22);%0A            return newReg.installing %7C%7C newReg.waiting %7C%7C newReg.active;%0A          %7D);%0A        %7D else %7B
 %0A    
-/**%0A
      
-* Loads flutter main entrypoint, specified by %60entrypointUrl%60, and calls a%0A     * user-specified %60onEntrypointLoaded%60 callback with an EngineInitializer%0A
+ console.debug(%22Loading from existing service worker.%22);%0A          return reg.active;%0A        %7D%0A      %7D%0A  %0A      /**%0A       * Returns a Promise that resolves when the %60latestServiceWorker%60 changes its%0A 
      
+ 
 * 
-object when it's done
+state to %22activated%22
 .%0A     
-*%0A
+  *%0A  
     
@@ -6718,489 +6718,906 @@
 am %7B
-*%7D options%0A     * @returns %7BPromise %7C undefined%7D that will eventually resolve with an%0A     * EngineInitializer, or will be rejected with the error caused by the loader.%0A     * Returns undefined when an %60onEntrypointLoaded%60 callback is supplied in %60options%60.
+Promise%3CServiceWorker%3E%7D latestServiceWorkerPromise%0A       * @returns %7BPromise%3Cvoid%3E%7D%0A       */%0A      async _waitForServiceWorkerActivation(latestServiceWorkerPromise) %7B%0A        const serviceWorker = await latestServiceWorkerPromise;%0A  %0A        if (!serviceWorker %7C%7C serviceWorker.state == %22activated%22) %7B%0A          if (!serviceWorker) %7B%0A            return Promise.reject(%0A              new Error(%22Cannot activate a null service worker!%22)%0A            );%0A          %7D else %7B%0A            console.debug(%22Service worker already active.%22);
 %0A     
-*/%0A
+  
     
-async loadEntrypoint(options) %7B%0A      const %7B entrypointUrl = %60$%7BbaseUri%7Dmain.dart.js%60, onEntrypointLoaded %7D =%0A        options %7C%7C %7B%7D;%0A%0A      return this._loadEntrypoint(entrypointUrl, onEntrypointLoaded);
+ return Promise.resolve();%0A          %7D%0A        %7D%0A        return new Promise((resolve, _) =%3E %7B%0A          serviceWorker.addEventListener(%22statechange%22, () =%3E %7B%0A            if (serviceWorker.state == %22activated%22) %7B%0A              console.debug(%22Activated new service worker.%22);%0A              resolve();%0A            %7D%0A          %7D);%0A        %7D);%0A      %7D
 %0A    %7D%0A
+  
 %0A   
@@ -7619,32 +7619,1536 @@
  %0A    /**%0A     *
+ Handles injecting the main Flutter web entrypoint (main.dart.js), and notifying%0A     * the user when Flutter is ready, through %60didCreateEngineInitializer%60.%0A     *%0A     * @see https://docs.flutter.dev/development/platform-integration/web/initialization%0A     */%0A    class FlutterEntrypointLoader %7B%0A      /**%0A       * Creates a FlutterEntrypointLoader.%0A       */%0A      constructor() %7B%0A        // Watchdog to prevent injecting the main entrypoint multiple times.%0A        this._scriptLoaded = false;%0A      %7D%0A  %0A      /**%0A       * Injects a TrustedTypesPolicy (or undefined if the feature is not supported).%0A       * @param %7BTrustedTypesPolicy %7C undefined%7D policy%0A       */%0A      setTrustedTypesPolicy(policy) %7B%0A        this._ttPolicy = policy;%0A      %7D%0A  %0A      /**%0A       * Loads flutter main entrypoint, specified by %60entrypointUrl%60, and calls a%0A       * user-specified %60onEntrypointLoaded%60 callback with an EngineInitializer%0A       * object when it's done.%0A       *%0A       * @param %7B*%7D options%0A       * @returns %7BPromise %7C undefined%7D that will eventually resolve with an%0A       * EngineInitializer, or will be rejected with the error caused by the loader.%0A       * Returns undefined when an %60onEntrypointLoaded%60 callback is supplied in %60options%60.%0A       */%0A      async loadEntrypoint(options) %7B%0A        const %7B entrypointUrl = %60$%7BbaseUri%7Dmain.dart.js%60, onEntrypointLoaded %7D =%0A          options %7C%7C %7B%7D;%0A  %0A        return this._loadEntrypoint(entrypointUrl, onEntrypointLoaded);%0A      %7D%0A  %0A      /**%0A       *
  Resolves the pr
@@ -9211,24 +9211,26 @@
 ointLoaded%60%0A
+  
      * funct
@@ -9268,26 +9268,30 @@
 eded).%0A     
-*%0A
+  *%0A  
      * Calle
@@ -9369,16 +9369,18 @@
 d,%0A     
+  
 * which 
@@ -9447,24 +9447,26 @@
 der by%0A     
+  
 * the Flutte
@@ -9481,16 +9481,18 @@
 object.%0A
+  
      *%0A 
@@ -9487,32 +9487,34 @@
 .%0A       *%0A     
+  
 * @param %7BFuncti
@@ -9641,27 +9641,31 @@
 rt#L42%0A     
+  
 */%0A
+  
     didCreat
@@ -9700,24 +9700,26 @@
 tializer) %7B%0A
+  
       if (ty
@@ -9773,32 +9773,34 @@
 = %22function%22) %7B%0A
+  
         this._di
@@ -9855,24 +9855,26 @@
 r);%0A        
+  
 // Remove th
@@ -9938,32 +9938,34 @@
 estart.%0A        
+  
 this._didCreateE
@@ -10004,16 +10004,18 @@
         
+  
 // Make 
@@ -10081,16 +10081,18 @@
         
+  
 delete _
@@ -10134,16 +10134,18 @@
 alizer;%0A
+  
       %7D%0A
@@ -10146,24 +10146,26 @@
     %7D%0A      
+  
 if (typeof t
@@ -10206,32 +10206,34 @@
 ion%22) %7B%0A        
+  
 this._onEntrypoi
@@ -10267,33 +10267,43 @@
 ;%0A      
+  
 %7D%0A
+  
     %7D%0A
+  
 %0A    
+  
 /**%0A
+  
      * I
@@ -10382,16 +10382,18 @@
 to%0A     
+  
 * handle
@@ -10459,26 +10459,30 @@
 r web.%0A     
-*%0A
+  *%0A  
      * @para
@@ -10550,24 +10550,26 @@
 ialize%0A     
+  
 *           
@@ -10579,24 +10579,26 @@
    Flutter.%0A
+  
      * @para
@@ -10666,24 +10666,26 @@
 d when%0A     
+  
 *           
@@ -10749,24 +10749,26 @@
 int is%0A     
+  
 *           
@@ -10779,24 +10779,26 @@
     loaded.%0A
+  
      * @retu
@@ -10868,24 +10868,26 @@
 ypoint%0A     
+  
 *           
@@ -10956,24 +10956,26 @@
 oaded%60%0A     
+  
 *           
@@ -11011,27 +11011,31 @@
 ction.%0A     
+  
 */%0A
+  
     _loadEnt
@@ -11075,24 +11075,26 @@
 ntLoaded) %7B%0A
+  
       const 
@@ -11149,17 +11149,21 @@
 ction%22;%0A
-%0A
+  %0A  
       if
@@ -11187,32 +11187,34 @@
 aded) %7B%0A        
+  
 this._scriptLoad
@@ -11224,16 +11224,18 @@
 = true;%0A
+  
         
@@ -11294,24 +11294,26 @@
 l);%0A        
+  
 if (useCallb
@@ -11315,24 +11315,26 @@
 Callback) %7B%0A
+  
           //
@@ -11400,16 +11400,18 @@
 ll call%0A
+  
         
@@ -11462,32 +11462,34 @@
 done.%0A          
+  
 console.debug(%22I
@@ -11532,32 +11532,34 @@
 k.%22);%0A          
+  
 this._onEntrypoi
@@ -11591,32 +11591,58 @@
 aded;%0A          
+//lolopatch%0A            //
 document.body.ap
@@ -11650,32 +11650,72 @@
 end(scriptTag);%0A
+          //ENDlolopatch%0A            %0A  
         %7D else %7B
@@ -11707,32 +11707,34 @@
        %7D else %7B%0A
+  
           // Inj
@@ -11806,16 +11806,18 @@
         
+  
 // with 
@@ -11874,32 +11874,34 @@
 calls%0A          
+  
 // %60didCreateEng
@@ -11919,24 +11919,26 @@
 zer%60 later.%0A
+  
           re
@@ -11969,32 +11969,34 @@
 e, reject) =%3E %7B%0A
+  
             cons
@@ -12020,16 +12020,18 @@
         
+  
 %22Injecti
@@ -12103,32 +12103,34 @@
 d!%22%0A            
+  
 );%0A            t
@@ -12120,32 +12120,34 @@
  );%0A            
+  
 this._didCreateE
@@ -12189,24 +12189,26 @@
             
+  
 scriptTag.ad
@@ -12236,24 +12236,26 @@
 %22, reject);%0A
+  
             
@@ -12289,32 +12289,34 @@
 Tag);%0A          
+  
 %7D);%0A        %7D%0A  
@@ -12315,33 +12315,45 @@
     
+  
 %7D%0A      
+  
 %7D%0A
+  
     %7D%0A
+  
 %0A    
+  
 /**%0A
+  
     
@@ -12396,24 +12396,26 @@
 n URL.%0A     
+  
 * @param %7Bst
@@ -12424,16 +12424,18 @@
 ng%7D url%0A
+  
      * @
@@ -12462,16 +12462,18 @@
 lement%7D%0A
+  
      */%0A
@@ -12476,16 +12476,18 @@
  */%0A    
+  
 _createS
@@ -12498,24 +12498,26 @@
 tTag(url) %7B%0A
+  
       const 
@@ -12564,24 +12564,26 @@
 pt%22);%0A      
+  
 scriptTag.ty
@@ -12613,16 +12613,18 @@
 cript%22;%0A
+  
       //
@@ -12669,16 +12669,18 @@
 ilable.%0A
+  
       le
@@ -12701,24 +12701,26 @@
  url;%0A      
+  
 if (this._tt
@@ -12729,32 +12729,34 @@
 licy != null) %7B%0A
+  
         trustedU
@@ -12799,26 +12799,30 @@
 url);%0A      
+  
 %7D%0A
+  
       script
@@ -12845,24 +12845,26 @@
 dUrl;%0A      
+  
 return scrip
@@ -12877,21 +12877,31 @@
     
+  
 %7D%0A  
+  
 %7D%0A
-%0A
+  %0A  
   /**%0A
+  
    *
@@ -12962,24 +12962,26 @@
 methods:%0A   
+  
 * * loadEntr
@@ -13052,16 +13052,18 @@
 ure)%0A   
+  
 * * didC
@@ -13135,16 +13135,18 @@
  its%0A   
+  
 *       
@@ -13206,19 +13206,23 @@
 zed)%0A   
+  
 */%0A
+  
   class 
@@ -13237,28 +13237,32 @@
 oader %7B%0A    
+  
 /**%0A
+  
      * Initi
@@ -13290,24 +13290,26 @@
 b app.%0A     
+  
 * @param %7B*%7D
@@ -13313,24 +13313,26 @@
 %7B*%7D options%0A
+  
      * @retu
@@ -13399,24 +13399,26 @@
 esolve%0A     
+  
 *           
@@ -13479,16 +13479,18 @@
 ed with%0A
+  
      *  
@@ -13561,16 +13561,18 @@
 he user%0A
+  
      *  
@@ -13647,27 +13647,31 @@
 ption.%0A     
+  
 */%0A
+  
     async lo
@@ -13690,24 +13690,26 @@
 (options) %7B%0A
+  
       const 
@@ -13758,17 +13758,21 @@
  %7C%7C %7B%7D;%0A
-%0A
+  %0A  
       //
@@ -13837,24 +13837,26 @@
 ader.%0A      
+  
 const flutte
@@ -13894,23 +13894,27 @@
 licy();%0A
-%0A
+  %0A 
       
+ 
 // The F
@@ -13980,32 +13980,34 @@
 ependency%0A      
+  
 // (and dynamica
@@ -14042,32 +14042,34 @@
 f not present).%0A
+  
       const serv
@@ -14122,24 +14122,26 @@
 er();%0A      
+  
 serviceWorke
@@ -14185,24 +14185,26 @@
 TT.policy);%0A
+  
       await 
@@ -14273,24 +14273,26 @@
 %3E %7B%0A        
+  
 // Regardles
@@ -14359,32 +14359,34 @@
 t go on%0A        
+  
 console.warn(%22Ex
@@ -14429,16 +14429,18 @@
 :%22, e);%0A
+  
       %7D)
@@ -14441,17 +14441,21 @@
     %7D);%0A
-%0A
+  %0A  
       //
@@ -14528,24 +14528,26 @@
 dency%0A      
+  
 // (and dyna
@@ -14596,24 +14596,26 @@
 ent).%0A      
+  
 const entryp
@@ -14654,24 +14654,26 @@
 ntLoader();%0A
+  
       entryp
@@ -14726,24 +14726,26 @@
 icy);%0A      
+  
 // Install t
@@ -14823,24 +14823,26 @@
 o be.%0A      
+  
 this.didCrea
@@ -14863,32 +14863,34 @@
 lizer =%0A        
+  
 entrypointLoader
@@ -14943,24 +14943,26 @@
 der);%0A      
+  
 return entry
@@ -15005,21 +15005,49 @@
 t);%0A
+  
     %7D%0A  
-%7D%0A%0A  
+  %7D%0A    %0A    //lolopatch%0A    //
 _flu
@@ -15081,14 +15081,719 @@
 ader();%0A
+    _flutter.loader = new FlutterEntrypointLoader();%0A    _flutter.loader.loadEntrypoint(%7B%0A   %0A                 onEntrypointLoaded: async function (engineInitializer) %7B%0A                   let appRunner = await engineInitializer.initializeEngine(%7B%0A                     hostElement: function()%7B%0A                      let appname = engineInitializer.appname;%0A                      baseUri=ensureTrailingSlash(getBaseURI(appname));%0A                      let target = document.querySelector(%22#flutter_app-%22+appname);  %0A                      return target;%0A                     %7D(),%0A                   %7D);%0A                   await appRunner.runApp();%0A                   %7D%0A               %7D);%0A    //ENDlolopatch%0A  
 %7D)();%0A
